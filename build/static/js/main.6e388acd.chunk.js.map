{"version":3,"sources":["redux/constants/action-types.js","redux/reducers/index.js","redux/stores/index.js","main/views/Shortcuts.jsx","redux/action/index.js","App.js","index.js"],"names":["GET_ALL_SHORTCUTS","EDIT_SHORTCUT","DELETE_SHORTCUT","initialState","list","rootReducer","state","arguments","length","undefined","action","type","update","$set","payload","copy","cloneDeep","obj","indexOf","key","filter","item","push","chrome","storage","local","set","shortcuts","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","regex","Shortcuts","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","data","filled","text","attachment","view","search","renderListRow","bind","assertThisInitialized","renderDataRow","handleChange","handleClick","handleInput","handleOpen","handleClose","_this2","index","_ref","style","react_default","a","createElement","className","Fab","height","width","ViewAgenda_default","onClick","setState","Edit_default","deleteShortcuts","Delete_default","_this3","_ref2","str","sorted","name","toLowerCase","includes","score","i","charAt","sort","b","reverse","editShortcuts","single","event","test","target","value","defineProperty","trim","_this4","TextField","label","placeholder","fullWidth","margin","variant","InputLabelProps","shrink","onChange","e","multiline","Button","marginBottom","disabled","keys","autoFocus","dist_es","rowHeight","rowRenderer","rowCount","Dialog","onClose","aria-labelledby","open","DialogTitle","id","lib","FileCopy_default","DialogContent","Component","connect","dispatch","theme","App","loadShortcuts","minWidth","minHeight","views_Shortcuts","get","result","createMuiTheme","palette","ReactDOM","render","ThemeProvider","es","src_App","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.6e388acd.chunk.js","sourcesContent":["export const GET_ALL_SHORTCUTS = \" GET_ALL_SHORTCUTS\";\r\nexport const EDIT_SHORTCUT = \"EDIT_SHORTCUT\";\r\nexport const DELETE_SHORTCUT = \" DELETE_SHORTCUT\";\r\n","/*global chrome*/\r\nimport {\r\n    GET_ALL_SHORTCUTS,\r\n    EDIT_SHORTCUT,\r\n    DELETE_SHORTCUT\r\n} from \"../constants/action-types\";\r\nimport update from \"immutability-helper\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\n\r\nconst initialState = {\r\n    list: []\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    if (action.type === GET_ALL_SHORTCUTS) {\r\n        return update(state, {\r\n            list: { $set: action.payload }\r\n        });\r\n    }\r\n\r\n    if (action.type === EDIT_SHORTCUT) {\r\n        let copy = cloneDeep(state.list);\r\n        let obj = [];\r\n        if (copy.indexOf(action.payload.key) > -1) {\r\n            obj = copy.filter(item =>\r\n                item.key !== action.payload.key ? item : action.payload\r\n            );\r\n        } else {\r\n            obj = copy;\r\n            obj.push(action.payload);\r\n        }\r\n        chrome.storage.local.set({ shortcuts: obj });\r\n        return update(state, {\r\n            list: { $set: obj }\r\n        });\r\n    }\r\n\r\n    if (action.type === DELETE_SHORTCUT) {\r\n        let copy = cloneDeep(state.list);\r\n        let obj = copy.filter(item => item.key !== action.payload.key);\r\n        chrome.storage.local.set({ shortcuts: obj });\r\n        return update(state, {\r\n            list: { $set: obj }\r\n        });\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, storeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { List } from \"react-virtualized\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { editShortcuts, deleteShortcuts } from \"../../redux/action/index\";\r\nimport \"../assets/shortcuts.css\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport ViewIcon from \"@material-ui/icons/ViewAgenda\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport FileCopy from \"@material-ui/icons/FileCopy\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst regex = /^[0-9a-z._-]+$/;\r\n\r\nclass Shortcuts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            filled: true,\r\n            key: \"\",\r\n            text: \"\",\r\n            attachment: \"\",\r\n            view: false,\r\n            search: \"\"\r\n        };\r\n\r\n        this.renderListRow = this.renderListRow.bind(this);\r\n        this.renderDataRow = this.renderDataRow.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    renderListRow({ index, key, style }) {\r\n        return (\r\n            <div key={key} style={style} className=\"row\">\r\n                <div className=\"content\">\r\n                    <div>\r\n                        <Fab style={{ height: \"32px\", width: \"32px\" }}>\r\n                            <ViewIcon\r\n                                onClick={() => {\r\n                                    this.handleOpen(this.props.list[index]);\r\n                                }}\r\n                            />\r\n                        </Fab>\r\n                        <Fab\r\n                            style={{ height: \"32px\", width: \"32px\" }}\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    filled: false,\r\n                                    key: this.props.list[index].key,\r\n                                    text: this.props.list[index].text,\r\n                                    attachment: this.props.list[index]\r\n                                        .attachment\r\n                                });\r\n                            }}\r\n                        >\r\n                            <EditIcon />\r\n                        </Fab>\r\n                        <Fab\r\n                            style={{ height: \"32px\", width: \"32px\" }}\r\n                            onClick={() => {\r\n                                this.props.deleteShortcuts(\r\n                                    this.props.list[index]\r\n                                );\r\n                            }}\r\n                        >\r\n                            <DeleteIcon />\r\n                        </Fab>\r\n                        <div>\r\n                            <b>Key:</b> {this.props.list[index].key}\r\n                        </div>\r\n                        <div className=\"text\">\r\n                            <b>Text:</b> {this.props.list[index].text}\r\n                        </div>\r\n                        <div>{this.props.list[index].attachment}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderDataRow({ index, key, style }) {\r\n        return (\r\n            <div key={key} style={style} className=\"row\">\r\n                <div className=\"content\">\r\n                    <div>\r\n                        <Fab style={{ height: \"32px\", width: \"32px\" }}>\r\n                            <ViewIcon\r\n                                onClick={() => {\r\n                                    this.handleOpen(this.state.data[index]);\r\n                                }}\r\n                            />\r\n                        </Fab>\r\n                        <Fab\r\n                            style={{ height: \"32px\", width: \"32px\" }}\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    filled: false,\r\n                                    key: this.state.data[index].key,\r\n                                    text: this.state.data[index].text,\r\n                                    attachment: this.state.data[index]\r\n                                        .attachment\r\n                                });\r\n                            }}\r\n                        >\r\n                            >\r\n                            <EditIcon />\r\n                        </Fab>\r\n                        <Fab\r\n                            style={{ height: \"32px\", width: \"32px\" }}\r\n                            onClick={() => {\r\n                                this.props.deleteShortcuts(\r\n                                    this.state.data[index].key\r\n                                );\r\n                            }}\r\n                        >\r\n                            <DeleteIcon />\r\n                        </Fab>\r\n                        <div>\r\n                            <b>Key: </b>\r\n                            {this.state.data[index].key}\r\n                        </div>\r\n                        <div className=\"text\">\r\n                            <b>Text: </b>\r\n                            {this.state.data[index].text}\r\n                        </div>\r\n                        <div>{this.state.data[index].attachment}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleChange(str) {\r\n        let data = this.props.list.filter(name => {\r\n            if (name.key.toLowerCase().includes(str.toLowerCase())) {\r\n                let score = 0;\r\n                for (let i = 0; i < name.key.length; i++) {\r\n                    if (i < str.length) {\r\n                        if (\r\n                            str.toLowerCase().charAt(i) ===\r\n                            name.key.toLowerCase().charAt(i)\r\n                        ) {\r\n                            score++;\r\n                        } else {\r\n                            score = score - (name.key.length - i);\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        score = score - (name.key.length - i);\r\n                        break;\r\n                    }\r\n                }\r\n                name.score = score;\r\n                return name;\r\n            }\r\n        });\r\n        const sorted = data.sort((a, b) => a.score - b.score).reverse();\r\n        this.setState({\r\n            data: sorted,\r\n            search: str\r\n        });\r\n    }\r\n\r\n    handleClick() {\r\n        this.props.editShortcuts({\r\n            key: this.state.key,\r\n            text: this.state.text,\r\n            attachment: this.state.attachment\r\n        });\r\n    }\r\n\r\n    handleOpen(data) {\r\n        this.setState({\r\n            single: data,\r\n            view: true\r\n        });\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({\r\n            view: false\r\n        });\r\n    }\r\n\r\n    handleInput(name, event) {\r\n        if (name === \"key\") {\r\n            if (\r\n                (regex.test(event.target.value) ||\r\n                    event.target.value.length === 0) &&\r\n                event.target.value.length <= 16\r\n            ) {\r\n                this.setState({\r\n                    [name]: event.target.value\r\n                });\r\n            }\r\n            if (\r\n                event.target.value.trim() !== \"\" &&\r\n                this.state.text.trim() !== \"\"\r\n            ) {\r\n                this.setState({\r\n                    filled: false\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    filled: true\r\n                });\r\n            }\r\n        } else if (name === \"text\") {\r\n            this.setState({\r\n                [name]: event.target.value\r\n            });\r\n            if (\r\n                event.target.value.trim() !== \"\" &&\r\n                this.state.key.trim() !== \"\"\r\n            ) {\r\n                this.setState({\r\n                    filled: false\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    filled: true\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                [name]: event.target.value\r\n            });\r\n            if (this.state.key.trim() !== \"\" && this.state.text.trim() !== \"\") {\r\n                this.setState({\r\n                    filled: false\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    filled: true\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    label=\"Key\"\r\n                    placeholder=\"Type in the key used to find this shortcut\"\r\n                    fullWidth\r\n                    value={this.state.key}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    InputLabelProps={{\r\n                        shrink: true\r\n                    }}\r\n                    onChange={e => this.handleInput(\"key\", e)}\r\n                />\r\n                <TextField\r\n                    label=\"Text to be pasted\"\r\n                    value={this.state.text}\r\n                    multiline\r\n                    fullWidth\r\n                    placeholder=\"Type in the text that will be pasted to the user\"\r\n                    InputLabelProps={{\r\n                        shrink: true\r\n                    }}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => this.handleInput(\"text\", e)}\r\n                />\r\n                <TextField\r\n                    label=\"Attachments\"\r\n                    value={this.state.attachment}\r\n                    multiline\r\n                    fullWidth\r\n                    placeholder=\"Paste path to attachment (network drive or Egnyte), separate using commas\"\r\n                    InputLabelProps={{\r\n                        shrink: true\r\n                    }}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    onChange={e => this.handleInput(\"attachment\", e)}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    fullWidth\r\n                    style={{ marginBottom: \"1em\" }}\r\n                    onClick={() => {\r\n                        this.handleClick();\r\n                        this.setState({\r\n                            key: \"\",\r\n                            text: \"\",\r\n                            attachment: \"\",\r\n                            filled: true\r\n                        });\r\n                    }}\r\n                    disabled={this.state.filled}\r\n                >\r\n                    Save\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    fullWidth\r\n                    style={{ marginBottom: \"1em\" }}\r\n                    onClick={() => {\r\n                        this.setState({\r\n                            key: \"\",\r\n                            text: \"\",\r\n                            attachment: \"\",\r\n                            filled: true\r\n                        });\r\n                    }}\r\n                >\r\n                    Clear\r\n                </Button>\r\n                {Object.keys(this.props.list).length > 0 ? (\r\n                    <div>\r\n                        <TextField\r\n                            label=\"Shortcut\"\r\n                            placeholder=\"Enter a shortcut\"\r\n                            fullWidth\r\n                            autoFocus\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            value={this.state.search}\r\n                            InputLabelProps={{\r\n                                shrink: true\r\n                            }}\r\n                            onChange={e => this.handleChange(e.target.value)}\r\n                        />\r\n                        {this.state.data.length === 0 &&\r\n                        this.state.search.length > 0 ? (\r\n                                <div>No shortcuts found</div>\r\n                            ) : (\r\n                                <List\r\n                                    width={800}\r\n                                    height={600}\r\n                                    rowHeight={100}\r\n                                    rowRenderer={\r\n                                        this.state.data.length > 0\r\n                                            ? this.renderDataRow\r\n                                            : this.renderListRow\r\n                                    }\r\n                                    rowCount={\r\n                                        this.state.data.length > 0\r\n                                            ? this.state.data.length\r\n                                            : this.props.list.length\r\n                                    }\r\n                                />\r\n                            )}\r\n                    </div>\r\n                ) : (\r\n                    <div>No shortcuts found</div>\r\n                )}\r\n                {this.state.single ? (\r\n                    <Dialog\r\n                        onClose={this.handleClose}\r\n                        aria-labelledby=\"simple-dialog-title\"\r\n                        open={this.state.view}\r\n                    >\r\n                        <DialogTitle id=\"simple-dialog-title\">\r\n                            View Alias {this.state.single.key}{\" \"}\r\n                            <CopyToClipboard text={this.state.single.text}>\r\n                                <Fab style={{ width: \"32px\", height: \"32px\" }}>\r\n                                    <FileCopy />\r\n                                </Fab>\r\n                            </CopyToClipboard>\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <div>\r\n                                <b>Key: </b>\r\n                                {this.state.single.key}\r\n                            </div>\r\n                            <div>\r\n                                <b>Text: </b>\r\n                                <pre>{this.state.single.text}</pre>\r\n                            </div>\r\n                            <div>{this.state.single.attachment}</div>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                ) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        list: state.list\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        editShortcuts: theme => dispatch(editShortcuts(theme)),\r\n        deleteShortcuts: theme => dispatch(deleteShortcuts(theme))\r\n    };\r\n};\r\n\r\nShortcuts.propTypes = {\r\n    list: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n    editShortcuts: PropTypes.func,\r\n    deleteShortcuts: PropTypes.func\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shortcuts);\r\n","/*global chrome*/\r\nimport {\r\n    GET_ALL_SHORTCUTS,\r\n    EDIT_SHORTCUT,\r\n    DELETE_SHORTCUT\r\n} from \"../constants/action-types\";\r\n\r\nexport function loadShortcuts() {\r\n    return dispatch => {\r\n        chrome.storage.local.get([\"shortcuts\"], function(result) {\r\n            dispatch({ type: GET_ALL_SHORTCUTS, payload: result.shortcuts });\r\n        });\r\n    };\r\n}\r\n\r\nexport function editShortcuts(obj) {\r\n    return dispatch => {\r\n        dispatch({ type: EDIT_SHORTCUT, payload: obj });\r\n    };\r\n}\r\n\r\nexport function deleteShortcuts(obj) {\r\n    return dispatch => {\r\n        dispatch({ type: DELETE_SHORTCUT, payload: obj });\r\n    };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Shortcuts from \"./main/views/Shortcuts\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loadShortcuts } from \"./redux/action/index\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadShortcuts();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ minWidth: \"800px\", minHeight: \"600px\" }}>\r\n                <Shortcuts />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadShortcuts: theme => dispatch(loadShortcuts(theme))\r\n    };\r\n};\r\n\r\nApp.propTypes = {\r\n    loadShortcuts: PropTypes.func\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/stores/index\";\r\nimport \"typeface-roboto\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: \"dark\"\r\n    }\r\n});\r\n\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n        <CssBaseline />\r\n    </MuiThemeProvider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}